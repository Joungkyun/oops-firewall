#!/bin/bash

NAME=oops-firewall
GCOL=40
version=7.0.4
OS=$(uname)
LOCALDIR=/usr/local
CHKDIR="/bin /sbin /usr/bin /usr/sbin ${LOCALDIR}/bin ${LOCALDIR}/sbin"

_command="depmod lsmod rmmod modprobe sed grep awk cat uname"
_command="${_command} ipcalc cut getopt ifconfig ls rm mkdir"
_command="${_command} msgfmt install cp touch route find sort"


usage() {
cat << EOF

Usage: $1 [option]
Options: [defaults in brackets after descriptions]
Configuration:
  --prefix=PREFIX   install architecture-independent files in PREFIX [/usr/local/]
  --bindir=DIR      user executables in DIR [PREFIX/bin]
  --confdir=DIR     default path of *.conf in DIR [PREFIX/etc/oops-firewall]
  --includedir=DIR  header files [PREFIX/include/oops-firewall]
  --shareddir=DIR   modifiable architecture-independent data in DIR [PREFIX/share]
  --initdir=DIR     redhat init script path [/etc/rc.d/init.d]
  --destdir=DIR     Absulute path !! for needed packaging
  --userpath=DIR,.. Additional PATH environment varibles
  --systemdunitdir=DIR path of systemd unit files [/usr/lib/systemd/system]
  --langenv=VAL     install configuration files with src/conf/VAL

Check Utility:
  --perl=PATH       path of perl
  --iptables=PATH   path of iptables

EOF

  exit 0
}

print_result() {
	opt=$1
	cstart="1;32m"
	cend="7;0m"

	[ -n "$2" ] && result=$2 || eval "result=\$${opt}"
	[ -n "$3" ] && cstart=$3

	[ -z "$4" ] && \
		echo -n "${opt} check" || \
		echo -n "${opt}"

	echo -ne "\\033[${GCOL}G"
	echo -n ".... "
	echo -ne "[${cstart}${result}[${cend}\n"
}

check_command() {
	__progs=${1}
	chkpath=${2}

	progs=${__progs%%:*}
	cmode=${__progs##*:}

	[ -z "${chkpath}" ] && chkpath=${CHKDIR}

	_progs=$(which ${progs} 2> /dev/null)

	if [ -z "${_progs}" ]; then
		for i in ${chkpath}
		do
			if [ -f "${i}/${progs}" ]; then
				_progs=${i}/${progs}
				break
			fi
		done
	fi

	if [ -z "${_progs}" ]; then
		print_result "${progs}" "can not found ${progs}" "1;31m"
		[ "${cmode}" != "pass" ] && exit 1
	else
		if [ -f "${_progs}" ]; then
			eval "${progs}=${_progs}"
			print_result "${progs}"
		else
			print_result "${progs}" "can not found ${progs}" "1;31m"
			[ "${cmode}" != "pass" ] && exit 1
		fi
	fi
}

if [ "${OS}" = "Linux" ]; then
	HEADCHK=/usr/include
fi

for i in $*
do
	case "${i}" in
		--prefix=*)
			prefix=$(echo ${i} | sed 's/.*=//g')
			;;
		--bindir=*)
			bindir=$(echo ${i} | sed 's/.*=//g')
			;;
		--initdir=*)
			initdir=$(echo ${i} | sed 's/.*=//g')
			;;
		--systemdunitdir=*)
			systemdunitdir=$(echo ${i} | sed 's/.*=//g')
			;;
		--includedir=*)
			includedir=$(echo ${i} | sed 's/.*=//g')
			;;
		--confdir=*)
			confdir=$(echo ${i} | sed 's/.*=//g')
			;;
		--shareddir=*)
			shareddir=$(echo ${i} | sed 's/.*=//g')
			;;
		--destdir=*)
			destdir=$(echo ${i} | sed 's/.*=//g')
			;;
		--perl=*)
			perl=$(echo ${i} | sed 's/.*=//g')
			;;
		--iptables=*)
			iptables=$(echo ${i} | sed 's/.*=//g')
			;;
		--userpath=*)
			userpath=$(echo ${i} + sed 's/.*=//g')
			userpath=$(echo ${userpath} | sed 's/,/ /g')
			CHKDIR="${CHKDIR} ${userpath}"
			;;
		--langenv=*)
			langenv=$(echo ${i} | sed 's/.*=//g')
			;;
		-h|--h*)
			usage $0
			;;
	esac
done

echo "Directory Check"
echo "............................................."
echo

[ -z "${prefix}" ] && prefix=${LOCALDIR}

prefixchk=$(echo ${prefix} | sed -e 's/.*\/\([^\/]*\)$/\1/g')
[ "${prefixchk}" = "oops-firewall" ] && prefixchk=1

print_result "prefix"

[ -z "${bindir}" ] && bindir=${prefix}/bin

print_result "bindir"

#
# if systemd mode, initdir changed /sbin/oops-firewall
#
if [ -z "${systemdunitdir}" ]; then
	if [ -d "/usr/lib/systemd/system" ]; then
	   	systemdunitdir=/usr/lib/systemd/system
		initdir="${bindir}/init.d"
		print_result "systemdunitdir"
	fi
else
	initdir="${bindir}/init.d"
fi

[ -z "${initdir}" ] && initdir=/etc/rc.d/init.d

print_result "initdir"

if [ -z "${confdir}" ]; then
	[ "${prefixchk}" = 1 ] && \
		confdir=${prefix}/etc || \
		confdir=${prefix}/etc/oops-firewall
fi

print_result "confdir"

if [ -z "${includedir}" ]; then
	[ "${prefixchk}" = 1 ] && \
		includedir=${prefix}/include || \
		includedir=${prefix}/include/oops-firewall
fi

print_result "includedir"

[ -z "${shareddir}" ] && shareddir=${prefix}/share

print_result "shareddir"

[ -n "${DESTDIR}" ] && destdir=${DESTDIR}
[ -z "${destdir}" ] && destdir=

print_result "destdir"


echo
echo "Program Check"
echo "............................................."
echo

if [ -z "${perl}" ]; then
	check_command perl "${CHKDIR} ${LOCALDIR}/perl/bin ${LOCALDIR}/perl/sbin"
else
	if [ ! -f "${perl}" ]; then
		print_result "perl" "can not found perl" "1;31m"
		exit 1
	fi

	print_result "perl"
fi

if [ -z "${iptables}" ]; then
	check_command iptables
else
	if [ ! -f "${perl}" ]; then
		print_result "perl" "can not found perl" "1;31m"
		exit 1
	fi

	print_result "perl"
fi

for i in ${_command}
do
	check_command ${i}
done


echo
echo "Create Template file"
echo "............................................."
echo

# init tmp directory
${rm} -rf ./temp
${mkdir} -p ./temp
${cp} -af src/* ./temp/
if [ -n "${langenv}" -a -d "./src/conf/${langenv}" ]; then
	${rm} -rf ./temp/conf/
	${cp} -af src/conf/${langenv}/ ./temp/conf
fi

${mkdir} -p ./temp/contrib
[ -f "/etc/debian_version" ] && os=debian || os=redhat
${cp} -af contrib/*.${os} ./temp/contrib/oops-firewall.init
if [ -d "${systemdunitdir}" ]; then
	${cp} -af contrib/oops-firewall.systemd ./temp/contrib/oops-firewall.systemd
fi

${find} ./temp -name ".svn" -exec rm -rf {} \; >& /dev/null

_target="awk bindir cat confdir cut depmod getopt grep"
_target="${_target} ifconfig includedir initdir ipcalc"
_target="${_target} iptables lsmod modprobe rm rmmod"
_target="${_target} sed shareddir sort touch uname version"
_target="${_target} route langenv"

for i in ${_target}
do
	eval "_change=\$${i}"
	${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/include/*
	${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/sbin/*
	${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/contrib/*
done

for i in oops-firewall.init command.h version.h oops-firewall
do
	print_result "$i" "ok"
done


echo
echo "Create make file"
echo "............................................."
echo

[ -z "${CFLAGS}" ] && \
	cfargs="-march=i386" || \
	cfargs="${CFLAGS}"

${install} -m 644 Makefile.in Makefile
${install} -m 644  po/Makefile.in po/Makefile

_target="bindir cc confdir destdir includedir initdir systemdunitdir install"
_target="${_target} ls mkdir msgfmt prefix rm sed shareddir"
_target="${_target} version cflags langenv"

for i in $_target
do
	eval "_change=\$${i}"
	${perl} -pi -e "s!\@${i}\@!${_change}!g" ./Makefile
	${perl} -pi -e "s!\@${i}\@!${_change}!g" ./po/Makefile
done

print_result "Create Makefile" "OK" "" "1"
print_result "Create po/Makefile" "OK" "" "1"

exit 0
