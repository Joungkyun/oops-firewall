#!/bin/sh
# $Id: configure,v 1.24 2007-03-29 17:56:02 oops Exp $

NAME=oops-firewall
GCOL=40
version=6.1.0
OS=$(uname)
LOCALDIR=/usr/local
CHKDIR="/bin /sbin /usr/bin /usr/sbin ${LOCALDIR}/bin ${LOCALDIR}/sbin"

_command="depmod lsmod rmmod modprobe sed grep awk cat uname"
_command="${_command} ipcalc cut getopt ifconfig ls rm mkdir"
_command="${_command} msgfmt install cp touch brctl:pass route find"


usage() {
cat << EOF

Usage: $1 [option]
Options: [defaults in brackets after descriptions]
Configuration:
  --prefix=PREFIX   install architecture-independent files in PREFIX [/usr/local/]
  --bindir=DIR      user executables in DIR [PREFIX/bin]
  --confdir=DIR     default path of *.conf in DIR [PREFIX/etc/oops-firewall]
  --includedir=DIR  header files [PREFIX/include/oops-firewall]
  --shareddir=DIR   modifiable architecture-independent data in DIR [PREFIX/share]
  --initdir=DIR     redhat init script path [/etc/rc.d/init.d]
  --destdir=DIR     Absulute path !! for needed packaging
  --userpath=DIR,.. Additional PATH environment varibles

Check Utility:
  --perl=PATH       path of perl
  --iptables=PATH   path of iptables

EOF

  exit 0
}

print_result() {
  opt=$1
  cstart="1;32m"
  cend="7;0m"

  if [ -n "$2" ]; then
    result=$2
  else
    eval "result=\$${opt}"
  fi

  if [ -n "$3" ]; then
    cstart=$3
  fi

  if [ -z "$4" ]; then
    echo -n "${opt} check"
  else
    echo -n "${opt}"
  fi

  echo -ne "\\033[${GCOL}G"
  echo -n ".... "
  echo -ne "[${cstart}${result}[${cend}\n"
}

check_command() {
  __progs=${1}
  chkpath=${2}

  progs=${__progs%%:*}
  cmode=${__progs##*:}

  [ -z "${chkpath}" ] && chkpath=${CHKDIR}

  _progs=$(which ${progs} 2> /dev/null)

  if [ -z "${_progs}" ]; then
    for i in ${chkpath}
    do
      if [ -f "${i}/${progs}" ]; then
        _progs=${i}/${progs}
        break
      fi
    done
  fi

  if [ -z "${_progs}" ]; then
    print_result "${progs}" "can not found ${progs}" "1;31m"
    [ "${cmode}" != "pass" ] && exit 1
  else
    if [ -f "${_progs}" ]; then
      eval "${progs}=${_progs}"
      print_result "${progs}"
    else
      print_result "${progs}" "can not found ${progs}" "1;31m"
      [ "${cmode}" != "pass" ] && exit 1
    fi
  fi
}

if [ "${OS}" = "Linux" ]; then
  HEADCHK=/usr/include
fi

for i in $*
do
  case "${i}" in
    --prefix=*)
      prefix=$(echo ${i} | sed 's/.*=//g')
      ;;
    --bindir=*)
      bindir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --initdir=*)
      initdir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --includedir=*)
      includedir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --confdir=*)
      confdir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --shareddir=*)
      shareddir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --destdir=*)
      destdir=$(echo ${i} | sed 's/.*=//g')
      ;;
    --perl=*)
      perl=$(echo ${i} | sed 's/.*=//g')
      ;;
    --iptables=*)
      iptables=$(echo ${i} | sed 's/.*=//g')
      ;;
    --userpath=*)
      userpath=$(echo ${i} + sed 's/.*=//g')
      userpath=$(echo ${userpath} | sed 's/,/ /g')
      CHKDIR="${CHKDIR} ${userpath}"
      ;;
    -h|--h*)
      usage $0
      ;;
  esac
done

echo "Directory Check"
echo "............................................."
echo

if [ -z "${prefix}" ]; then
  prefix=${LOCALDIR}
fi

prefixchk=$(echo ${prefix} | sed -e 's/.*\/\([^\/]*\)$/\1/g')
if [ "${prefixchk}" = "oops-firewall" ]; then
  prefixchk=1
fi

print_result "prefix"

if [ -z "${bindir}" ]; then
  bindir=${prefix}/bin
fi

print_result "bindir"

if [ -z "${initdir}" ]; then
  initdir=/etc/rc.d/init.d
fi

print_result "initdir"

if [ -z "${confdir}" ]; then
  if [ "${prefixchk}" = 1 ]; then
    confdir=${prefix}/etc
  else
    confdir=${prefix}/etc/oops-firewall
  fi
fi

print_result "confdir"

if [ -z "${includedir}" ]; then
  if [ "${prefixchk}" = 1 ]; then
    includedir=${prefix}/include
  else
    includedir=${prefix}/include/oops-firewall
  fi
fi

print_result "includedir"

if [ -z "${shareddir}" ]; then
  shareddir=${prefix}/share
fi

print_result "shareddir"

if [ -n "${DESTDIR}" ]; then
  destdir=${DESTDIR}
fi

if [ -z "${destdir}" ]; then
  destdir=
fi

print_result "destdir"


echo
echo "Compiler Check"
echo "............................................."
echo
cc=$(which gcc)
if [ -z "${cc}" ]; then
  for i in ${CHKDIR} ${LOCALDIR}/gcc/bin ${LOCALDIR}/gcc/sbin
  do
    if [ -f "${i}/cc" ]; then
      install=${i}/cc
      break;
    fi
  done
fi

if [ -z "${cc}" ]; then
  print_result "compiler" "failed" "1;31m"
  exit 1
else
  if [ -f "${cc}" ]; then
    print_result "compiler" "${cc}"
  else
    print_result "compiler" "failed"
    exit 1
  fi
fi

ccver=$(${cc} --version)
print_result "compiler version" "${ccver}"

echo
echo "Header file Check"
echo "............................................."
echo
HEADERS="stdio.h stdlib.h string.h stdarg.h ctype.h unistd.h sys/stat.h grp.h time.h libintl.h locale.h"
HCHK=0

for i in ${HEADERS}
do

  cat > oops-firewall_header_check.c << EOF
#include <${i}>

main()
{
    printf("");
}
EOF

  ${cc} -o oops-firewall_header_check oops-firewall_header_check.c 2> /dev/null
  HCHK=$?

  rm -f oops-firewall_header_check*

  echo -ne
  if [ "${HCHK}" = 0 ]; then
    print_result "${i} header" "ok"
  else
    print_result "${i} header" "failed" "1;31m"
    exit 1
  fi
done


echo
echo "Program Check"
echo "............................................."
echo

if [ -z "${perl}" ]; then
  check_command perl "${CHKDIR} ${LOCALDIR}/perl/bin ${LOCALDIR}/perl/sbin"
else
  if [ ! -f "${perl}" ]; then
    print_result "perl" "can not found perl" "1;31m"
    exit 1
  else
    print_result "perl"
  fi
fi

if [ -z "${iptables}" ]; then
  check_command iptables
else
  if [ ! -f "${perl}" ]; then
    print_result "perl" "can not found perl" "1;31m"
    exit 1
  else
    print_result "perl"
  fi
fi

for i in ${_command}
do
  check_command ${i}
done


echo
echo "Create Template file"
echo "............................................."
echo

# init tmp directory
${rm} -rf ./temp
${mkdir} -p ./temp
${cp} -af src/* ./temp/

${mkdir} -p ./temp/contrib
if [ -f "/etc/debian_version" ]; then
  ${cp} -af contrib/*.debian ./temp/contrib/oops-firewall.init
else
  ${cp} -af contrib/*.redhat ./temp/contrib/oops-firewall.init
fi

${find} ./temp -name "CVS" -exec rm -rf {} \; >& /dev/null

_target="awk bindir cat confdir cut depmod getopt grep"
_target="${_target} ifconfig includedir initdir ipcalc"
_target="${_target} iptables lsmod modprobe rm rmmod"
_target="${_target} sed shareddir touch uname version"
_target="${_target} brctl route"

for i in ${_target}
do
  eval "_change=\$${i}"
  ${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/include/*
  ${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/sbin/*
  ${perl} -pi -e "s!\@${i}\@!${_change}!g" ./temp/contrib/*
done

# bridge check
[ -n "${brctl}" ] && \
  ${perl} -pi -e "s!BRIDGE_SET=0!BRIDGE_SET=1!g" ./temp/include/default.h


for i in oops-firewall.init command.h version.h oops-firewall
do
	print_result "$i" "ok"
done


echo
echo "Create make file"
echo "............................................."
echo

if [ -z "${CFLAGS}" ]; then
  cfargs="-march=i386"
else
  cfargs="${CFLAGS}"
fi

${install} -m 644 Makefile.in Makefile
${install} -m 644  po/Makefile.in po/Makefile

_target="bindir cc confdir destdir includedir initdir install"
_target="${_target} ls mkdir msgfmt prefix rm sed shareddir"
_target="${_target} version cflags"

for i in $_target
do
  eval "_change=\$${i}"
  ${perl} -pi -e "s!\@${i}\@!${_change}!g" ./Makefile
  ${perl} -pi -e "s!\@${i}\@!${_change}!g" ./po/Makefile
done

print_result "Create Makefile" "OK" "" "1"
print_result "Create po/Makefile" "OK" "" "1"

exit 0
